<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    					http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    	
    	
    <bean id="xmlStringProcessor" class="eu.dariah.de.minfba.processing.service.xml.XmlStringProcessingService" scope="prototype">
    	<property name="elementProcessors">
    		<list>
				<ref bean="gtfElementProcessor" />
			</list>
    	</property>
    	<property name="maxItems" value="100" />
    </bean>
    
    
   	<bean id="mappingExecutionService" class="eu.dariah.de.minfba.mapping.MappingExecutionServiceImpl" scope="prototype">
   		<property name="elementProcessors">
    		<list>
				<ref bean="gtfElementProcessor" />
			</list>
    	</property>
    </bean>

    <bean id="gtfElementProcessor" class="de.unibamberg.minf.processing.gtf.GtfElementProcessor">
		<property name="transformationEngine" ref="transformationEngine" />
	</bean>
	

	<bean id="transformationEngine" class="de.unibamberg.minf.gtf.TransformationEngine">
		<property name="autoCompile" value="true" />
		<property name="forceRecompilation" value="true" />
		<property name="commandDispatcher" ref="commandDispatcher" />
		<property name="grammarsRoot" value="${paths.grammars}" />
		<property name="parseErrorDumpPath" value="/tmp/wikitest_errors" />
		<property name="objMapper" ref="objectMapper" />
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
	        <list>
	            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	                <property name="objectMapper" ref="objectMapper"/>
	            </bean>
	        </list>
    	</property>
    	<property name="requestFactory">
    		<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
	            <property name="readTimeout" value="${api.common.readTimeout:20000}" />
	            <property name="connectTimeout" value="${api.common.connectionTimeout:20000}" />
            </bean>
    	</property>
	</bean>
	
	<bean id="nlpMainDispatcher" class="de.unibamberg.minf.gtf.extensions.nlp.commands.NlpMainDispatcher">
		<property name="correlationDetector" ref="correlationDetector" />
		<property name="claimsInferencer" ref="claimsInferencer" />
		<property name="languageDispatchers">
			<map>
				<entry key="DE">
					<bean class="de.unibamberg.minf.gtf.extensions.nlp.commands.LanguageDispatcher">
						<property name="sentenceDetector">
							<bean class="de.unibamberg.minf.gtf.extensions.nlp.sentences.OpenNlpSentenceDetectorImpl">
								<property name="sentenceModelPath" value="${paths.models}/openNLP/DE-sent.bin" />	
							</bean>
						</property>
						<property name="nlpProcessor">
							<bean class="de.unibamberg.minf.gtf.extensions.nlp.processing.SimpleStanfordProcessor">
								<property name="lang" value="de" />
								<property name="lexParserModelPath" value="${paths.models}/stanford/lex/DE.ser.gz" />
								<property name="maxentTaggerModelPath" value="${paths.models}/stanford/pos/DE.tagger" />
								<property name="nerCombinerModelPath" value="${paths.models}/stanford/ner/DE.crf.ser.gz" />
								<property name="sutimeDefsPath" value="${paths.models}/sutime/defs.sutime.txt" />
								<property name="sutimeLangHolidaysPath" value="${paths.models}/sutime/DE.holidays.sutime.txt" />
								<property name="sutimeLangPath" value="${paths.models}/sutime/DE.sutime.txt" />
							</bean>
						</property>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="correlationDetector" class="de.unibamberg.minf.gtf.extensions.nlp.processing.CorrelationDetectorImpl" />
	<bean id="claimsInferencer" class="de.unibamberg.minf.gtf.extensions.nlp.processing.BiographicalClaimsInferencerImpl" />
	
	
	<bean id="commandDispatcher" class="de.unibamberg.minf.gtf.transformation.processing.GlobalCommandDispatcher">
		<property name="commandDispatchers">
			<map>
				<entry key="CORE"><bean class="de.unibamberg.minf.gtf.transformation.commands.CoreCommandsDispatcher" /></entry>
				<entry key="WIKI"><bean class="de.unibamberg.minf.gtf.extensions.wiki.commands.WikiCommandsDispatcher" /></entry>
				<entry key="GEO">
					<bean class="de.unibamberg.minf.gtf.extensions.geo.commands.GeoCommandsDispatcher">
						<property name="simple">
							<bean class="de.unibamberg.minf.gtf.extensions.geo.commands.SimpleGeoCommands">
								<property name="restTemplate" ref="restTemplate" />
							</bean>
						</property>
					</bean>
				</entry>
				<entry key="NLP" value-ref="nlpMainDispatcher" />
			</map>
		</property>
	</bean>			
</beans>