#Generated by ResourceBundle Editor (http://essiembre.github.io/eclipse-rbe/)

~de.unibamberg.minf.common.error.insufficient_rights.body                          = Your account does not have sufficient rights assigned in order to complete the chosen action
~de.unibamberg.minf.common.error.insufficient_rights.head                          = Insufficient rights
~de.unibamberg.minf.common.error.page_reload_required.body                         = Session data has expired. A page reload is required.
~de.unibamberg.minf.common.error.page_reload_required.head                         = Page reload required
~de.unibamberg.minf.common.label.file                                              = File
~de.unibamberg.minf.common.labels.no_match_found                                   = No matching entry found
~de.unibamberg.minf.common.link.actions                                            = Actions
~de.unibamberg.minf.common.link.activity                                           = Activity
~de.unibamberg.minf.common.link.add                                                = Add
~de.unibamberg.minf.common.link.all                                                = All
~de.unibamberg.minf.common.link.cancel                                             = Cancel
~de.unibamberg.minf.common.link.close                                              = Close
~de.unibamberg.minf.common.link.contact                                            = Contact
~de.unibamberg.minf.common.link.create_download_link                               = Request download link...
~de.unibamberg.minf.common.link.delete                                             = Delete
~de.unibamberg.minf.common.link.disable                                            = Disable
~de.unibamberg.minf.common.link.download                                           = Download
~de.unibamberg.minf.common.link.edit                                               = Edit
~de.unibamberg.minf.common.link.enable                                             = Enable
~de.unibamberg.minf.common.link.error                                              = Error
~de.unibamberg.minf.common.link.filter                                             = Filter
~de.unibamberg.minf.common.link.legal_information                                  = Legal information
~de.unibamberg.minf.common.link.load                                               = Load
~de.unibamberg.minf.common.link.login                                              = Login
~de.unibamberg.minf.common.link.logout                                             = Logout
~de.unibamberg.minf.common.link.modified                                           = Modified
~de.unibamberg.minf.common.link.move_down                                          = Move down
~de.unibamberg.minf.common.link.move_up                                            = Move up
~de.unibamberg.minf.common.link.no                                                 = No
~de.unibamberg.minf.common.link.ok                                                 = Ok
~de.unibamberg.minf.common.link.privacy                                            = Privacy
~de.unibamberg.minf.common.link.publish                                            = Publish
~de.unibamberg.minf.common.link.reload                                             = Reload
~de.unibamberg.minf.common.link.reload_data                                        = Reload data
~de.unibamberg.minf.common.link.reset                                              = Reset
~de.unibamberg.minf.common.link.reset_view                                         = Reset view
~de.unibamberg.minf.common.link.save                                               = Save
~de.unibamberg.minf.common.link.submit                                             = Submit
~de.unibamberg.minf.common.link.upload                                             = Upload
~de.unibamberg.minf.common.link.validate                                           = Validate
~de.unibamberg.minf.common.link.validated                                          = Validated
~de.unibamberg.minf.common.link.validation_required                                = Validation required
~de.unibamberg.minf.common.link.view                                               = View
~de.unibamberg.minf.common.link.yes                                                = Yes
~de.unibamberg.minf.common.local_login.heading                                     = Login with local credentials
~de.unibamberg.minf.common.local_login.invalid                                     = Invalid username and/or password
~de.unibamberg.minf.common.local_login.password                                    = Password
~de.unibamberg.minf.common.local_login.signin                                      = Login
~de.unibamberg.minf.common.local_login.title                                       = Local login
~de.unibamberg.minf.common.local_login.username                                    = Username
~de.unibamberg.minf.common.model.draft                                             = Draft
~de.unibamberg.minf.common.model.id                                                = ID
~de.unibamberg.minf.common.model.label                                             = Label
~de.unibamberg.minf.common.model.public                                            = Public
~de.unibamberg.minf.common.model.readonly                                          = Read only
~de.unibamberg.minf.common.model.source                                            = Source
~de.unibamberg.minf.common.model.stub                                              = Stub
~de.unibamberg.minf.common.model.type                                              = Type
~de.unibamberg.minf.common.model.types.descriptiongrammarimpl                      = Grammar
~de.unibamberg.minf.common.model.types.labelimpl                                   = Label
~de.unibamberg.minf.common.model.types.nonterminalimpl                             = Nonterminal
~de.unibamberg.minf.common.model.types.transformationfunctionimpl                  = Function
~de.unibamberg.minf.common.view.data_tables.aria.sort_ascending                    = : activate to sort column ascending
~de.unibamberg.minf.common.view.data_tables.aria.sort_descending                   = : activate to sort column descending
~de.unibamberg.minf.common.view.data_tables.empty_table                            = No data available
~de.unibamberg.minf.common.view.data_tables.info                                   = _TOTAL_ entries
~de.unibamberg.minf.common.view.data_tables.info_empty                             = No entries
~de.unibamberg.minf.common.view.data_tables.info_filtered                          = (_MAX_ total)
~de.unibamberg.minf.common.view.data_tables.info_post_fix                          = &nbsp;
~de.unibamberg.minf.common.view.data_tables.info_thousands                         = ,
~de.unibamberg.minf.common.view.data_tables.length_menu                            = _MENU_ records per page
~de.unibamberg.minf.common.view.data_tables.loading_records                        = Loading...
~de.unibamberg.minf.common.view.data_tables.paginate.first                         = First
~de.unibamberg.minf.common.view.data_tables.paginate.last                          = Last
~de.unibamberg.minf.common.view.data_tables.paginate.next                          = \u00BB
~de.unibamberg.minf.common.view.data_tables.paginate.previous                      = \u00AB
~de.unibamberg.minf.common.view.data_tables.processing                             = Processing...
~de.unibamberg.minf.common.view.data_tables.search                                 = Search:
~de.unibamberg.minf.common.view.data_tables.zero_records                           = \ 
~de.unibamberg.minf.common.view.forms.file.deletesucceeded.body                    = Your file has been deleted from the server
~de.unibamberg.minf.common.view.forms.file.deletesucceeded.head                    = File deleted
~de.unibamberg.minf.common.view.forms.file.generalerror.body                       = An error was raised on the server ({0})
~de.unibamberg.minf.common.view.forms.file.generalerror.head                       = An error occured
~de.unibamberg.minf.common.view.forms.file.servererror.body                        = Could not interact with server. Please check the internet connectivity of your computer, try again or inform the administrator if this problem pertains.
~de.unibamberg.minf.common.view.forms.file.servererror.head                        = Problem interacting with server
~de.unibamberg.minf.common.view.forms.file.uploadcomplete.body                     = The file has successfully been uploaded and is now being validated.
~de.unibamberg.minf.common.view.forms.file.uploadcomplete.head                     = File uploaded
~de.unibamberg.minf.common.view.forms.file.uploaderror.body                        = Your file was not uploaded due to an error ({0})
~de.unibamberg.minf.common.view.forms.file.uploaderror.head                        = File failed to upload
~de.unibamberg.minf.common.view.forms.file.validationfailed.body                   = Validation resulted in the following error message: {0}
~de.unibamberg.minf.common.view.forms.file.validationfailed.head                   = Validation of the provided file failed
~de.unibamberg.minf.common.view.forms.file.validationsucceeded.body                = Your file has successfully been validated
~de.unibamberg.minf.common.view.forms.file.validationsucceeded.head                = File validated
~de.unibamberg.minf.common.view.forms.servererror.body                             = Could not interact with server. Please check the internet connectivity of your computer, try again or inform the administrator if this problem pertains.
~de.unibamberg.minf.common.view.forms.servererror.head                             = Problem interacting with server
~de.unibamberg.minf.common.view.forms.uploadsuccessful.body                        = Successfully saved
~de.unibamberg.minf.common.view.forms.uploadsuccessful.head                        = The object has been saved.
~de.unibamberg.minf.common.view.forms.validationerrors.body                        = {0} error(s) occured while trying to save the datamodel
~de.unibamberg.minf.common.view.forms.validationerrors.head                        = Validation errors occurred
~de.unibamberg.minf.common.view.new_id_onsave                                      = created when saving
~de.unibamberg.minf.common.view.no_data_fetched_yet                                = No data fetched yet...
~de.unibamberg.minf.common.view.noscript                                           = This DARIAH-DE service only functions with activated JavaScript!
~de.unibamberg.minf.common.view.notifications.async_general_error                  = An error occurred on the server. Please try again in a few minutes.
~de.unibamberg.minf.common.view.notifications.async_timeout                        = The server took too long to send a response. Please try again in a few minutes.
~de.unibamberg.minf.common.view.notifications.login_required.body                  = You need to login to perform this action. Continue?
~de.unibamberg.minf.common.view.notifications.login_required.head                  = Login required
~de.unibamberg.minf.common.view.notifications.session_expired_reload               = <h2>Your session has expired</h2>The page will reload after which you can choose to log in again.
~de.unibamberg.minf.dme.button.add                                                 = Create entry
~de.unibamberg.minf.dme.button.add_desc_function                                   = Add grammar
~de.unibamberg.minf.dme.button.add_label                                           = Add element
~de.unibamberg.minf.dme.button.add_mapping                                         = New Mapping
~de.unibamberg.minf.dme.button.add_nonterminal                                     = Add element
~de.unibamberg.minf.dme.button.add_schema                                          = New datamodel
~de.unibamberg.minf.dme.button.add_trans_function                                  = Add transformation
~de.unibamberg.minf.dme.button.add_vocabulary                                      = New vocabulary
~de.unibamberg.minf.dme.button.add_vocabulary_item                                 = New entry
~de.unibamberg.minf.dme.button.assign_child                                        = Assign child element
~de.unibamberg.minf.dme.button.collapse_all                                        = Collapse all
~de.unibamberg.minf.dme.button.collapse_from_here                                  = Collapse from here
~de.unibamberg.minf.dme.button.create_root                                         = Create root element
~de.unibamberg.minf.dme.button.delete_session                                      = Delete session
~de.unibamberg.minf.dme.button.editor                                              = Open in editor
~de.unibamberg.minf.dme.button.expand_all                                          = Expand all
~de.unibamberg.minf.dme.button.expand_from_here                                    = Expand from here
~de.unibamberg.minf.dme.button.export                                              = Export
~de.unibamberg.minf.dme.button.export_from_here                                    = Export from here
~de.unibamberg.minf.dme.button.import                                              = Import
~de.unibamberg.minf.dme.button.import_here                                         = Import here
~de.unibamberg.minf.dme.button.import_sample_file                                  = Upload sample
~de.unibamberg.minf.dme.button.load_session                                        = Load session
~de.unibamberg.minf.dme.button.model_individually                                  = Decouple from other occurrences
~de.unibamberg.minf.dme.button.new_session                                         = Start new session
~de.unibamberg.minf.dme.button.save_session                                        = Save session
~de.unibamberg.minf.dme.button.set_processing_root                                 = Mark as dataset-base root
~de.unibamberg.minf.dme.button.show_reused                                         = Expand to all occurrences
~de.unibamberg.minf.dme.dialog.confirm_clone_tree.body                             = This element is used in muliple instances within this datamodel. If you continue, you can model the selected element individually and map it accordingly.
~de.unibamberg.minf.dme.dialog.confirm_clone_tree.head                             = Decouple from other occurrences?
~de.unibamberg.minf.dme.dialog.confirm_delete                                      = The selected entry [id: {0}] is irreversibly deleted. Continue?
~de.unibamberg.minf.dme.dialog.confirm_delete_session.body                         = The session and saved session data (sample input/output) are deleted. Continue?
~de.unibamberg.minf.dme.dialog.confirm_delete_session.head                         = Delete session?
~de.unibamberg.minf.dme.dialog.confirm_disable                                     = The selected entry [id: {0}] will be disabled. Data will no longer be interpreted. Continue?
~de.unibamberg.minf.dme.dialog.confirm_enable                                      = The selected entry [id: {0}] will be enabled. Continue?
~de.unibamberg.minf.dme.dialog.confirm_processing_root.body                        = The element will be marked as base node for datasets. Superordinate nodes will no longer be respected when parsing input data. Continue?
~de.unibamberg.minf.dme.dialog.confirm_processing_root.head                        = Mark as dataset-base root?
~de.unibamberg.minf.dme.dialog.confirm_publish                                     = The selected entry [id: {0}] gets published. Continue?
~de.unibamberg.minf.dme.dialog.element_label                                       = Please specify a name:
~de.unibamberg.minf.dme.editor.actions                                             = Available Actions
~de.unibamberg.minf.dme.editor.actions.download_sample_file                        = Download input
~de.unibamberg.minf.dme.editor.actions.download_sample_output                      = Download results
~de.unibamberg.minf.dme.editor.actions.download_sample_transformed                 = Results in target model
~de.unibamberg.minf.dme.editor.actions.edit_connection                             = Edit details
~de.unibamberg.minf.dme.editor.actions.edit_function                               = Edit transformation
~de.unibamberg.minf.dme.editor.actions.edit_grammar                                = Edit grammar
~de.unibamberg.minf.dme.editor.actions.ensure_connected_visible                    = Show connected elements
~de.unibamberg.minf.dme.editor.actions.execute                                     = Execute
~de.unibamberg.minf.dme.editor.actions.reset_position                              = Reset position
~de.unibamberg.minf.dme.editor.actions.show_connection                             = Show details
~de.unibamberg.minf.dme.editor.actions.show_function                               = View function
~de.unibamberg.minf.dme.editor.actions.show_grammar                                = View grammar
~de.unibamberg.minf.dme.editor.details                                             = Details
~de.unibamberg.minf.dme.editor.element_details                                     = Element properties
~de.unibamberg.minf.dme.editor.element_model                                       = Element model
~de.unibamberg.minf.dme.editor.forms.sample_uploaded.body                          = The file has been uploaded and can be executed against the element model
~de.unibamberg.minf.dme.editor.forms.sample_uploaded.head                          = File uploaded
~de.unibamberg.minf.dme.editor.hint.context_menu                                   = The element model exposes available actions in terms of a context (right click) menu
~de.unibamberg.minf.dme.editor.hint.sessions                                       = Sessions persist data of the area 'Sample transformation'. They do not contain structural data of the datamodel, like grammars, transformation rules etc.
~de.unibamberg.minf.dme.editor.history                                             = Change history
~de.unibamberg.minf.dme.editor.mapped_concept_details                              = Concept details
~de.unibamberg.minf.dme.editor.mapping                                             = Mapping
~de.unibamberg.minf.dme.editor.mapping_details                                     = Mapping details
~de.unibamberg.minf.dme.editor.sample.data                                         = Sample data
~de.unibamberg.minf.dme.editor.sample.download.file_count                          = 1 file
~de.unibamberg.minf.dme.editor.sample.download.files_count                         = {0} files (as ZIP-Archive)
~de.unibamberg.minf.dme.editor.sample.download.format                              = Format
~de.unibamberg.minf.dme.editor.sample.download.no_data.body                        = Either no transformation has been executed in this session or the transformation produced no results.
~de.unibamberg.minf.dme.editor.sample.download.no_data.head                        = No result data available
~de.unibamberg.minf.dme.editor.sample.download.set                                 = Data set
~de.unibamberg.minf.dme.editor.sample.download.set.all                             = All {0} data sets
~de.unibamberg.minf.dme.editor.sample.download.set.single                          = Single dataset
~de.unibamberg.minf.dme.editor.sample.download.title                               = Download sample results
~de.unibamberg.minf.dme.editor.sample.error.error_in_grammar                       = Sample transformation not possible due to errors in base grammar
~de.unibamberg.minf.dme.editor.sample.execute                                      = Execute sample transformation
~de.unibamberg.minf.dme.editor.sample.file                                         = Sample file
~de.unibamberg.minf.dme.editor.sample.input                                        = Input
~de.unibamberg.minf.dme.editor.sample.log.processed_1_result                       = Sample input processed (total {0}ms): 1 resource found
~de.unibamberg.minf.dme.editor.sample.log.processed_n_results                      = Sample input processed (total {0}ms): {1} resources found
~de.unibamberg.minf.dme.editor.sample.log.processed_no_results                     = Sample input processed: No resources found
~de.unibamberg.minf.dme.editor.sample.log.session_sample_set                       = Sample set for your current session
~de.unibamberg.minf.dme.editor.sample.log.session_started                          = Editor session started [id: {0}]
~de.unibamberg.minf.dme.editor.sample.log.translated_1_result                      = Sample input transformed (total {0}ms): 1 resource found
~de.unibamberg.minf.dme.editor.sample.log.translated_n_results                     = Sample input transformed (total {0}ms): {1} resources found
~de.unibamberg.minf.dme.editor.sample.log.translated_no_results                    = Sample input transformed: No resources found
~de.unibamberg.minf.dme.editor.sample.notice.empty_sample                          = <strong>No sample data available.</strong><br />You need to provide such as direct input or file first.
~de.unibamberg.minf.dme.editor.sample.notice.hint_sample                           = Provide a sample above and select 'Process input' to test data processing
~de.unibamberg.minf.dme.editor.sample.output                                       = Results
~de.unibamberg.minf.dme.editor.sample.placeholder                                  = Enter examplary data here and click on 'Execute' to test transformation. Currently only XML is interpreted as input format.
~de.unibamberg.minf.dme.editor.sample.placeholder_set                              = Sample data are available on the server. Clicking 'Execute' will used these data unless new text is entered here. You can choose to {0} sample data here or to {1}.
~de.unibamberg.minf.dme.editor.sample.placeholder_set.download                     = download
~de.unibamberg.minf.dme.editor.sample.placeholder_set.show                         = view
~de.unibamberg.minf.dme.editor.sample.process_input                                = Process input
~de.unibamberg.minf.dme.editor.sample.show_processed_svg                           = Parsed input
~de.unibamberg.minf.dme.editor.sample.title                                        = Sample transformation
~de.unibamberg.minf.dme.editor.sample.transformation_result                        = Transformation result
~de.unibamberg.minf.dme.editor.schema_details                                      = Datamodel properties
~de.unibamberg.minf.dme.editor.sessions                                            = Sessions
~de.unibamberg.minf.dme.form.concept.edit                                          = Associated concept
~de.unibamberg.minf.dme.form.element.assign_child.chosen_element                   = Selected element
~de.unibamberg.minf.dme.form.element.assign_child.search_element                   = Find element
~de.unibamberg.minf.dme.form.element.assign_child.title                            = Assign child element
~de.unibamberg.minf.dme.form.function.create                                       = Create new function
~de.unibamberg.minf.dme.form.function.edit                                         = Transformation function editor
~de.unibamberg.minf.dme.form.function.legend.edit_function                         = Edit function
~de.unibamberg.minf.dme.form.function.process.parsing_function                     = Parsing function
~de.unibamberg.minf.dme.form.function.process.title                                = Progress
~de.unibamberg.minf.dme.form.grammar.create                                        = Create new grammar
~de.unibamberg.minf.dme.form.grammar.edit                                          = Grammar editor
~de.unibamberg.minf.dme.form.grammar.help.hint.samples                             = Samples are never saved with the grammar but serve exemplary analysis purposes in this dialog only
~de.unibamberg.minf.dme.form.grammar.help.title                                    = Grammar editor help
~de.unibamberg.minf.dme.form.grammar.hint.combined_layout                          = Combined: Include lexer/parser rules in one grammar
~de.unibamberg.minf.dme.form.grammar.hint.passthrough                              = Passthrough: No grammatical analysis; input is forwarded only
~de.unibamberg.minf.dme.form.grammar.hint.separate_layout                          = Separate: Specify lexer and parser rules in separate grammars
~de.unibamberg.minf.dme.form.grammar.legend.edit_concept                           = Detailed element model
~de.unibamberg.minf.dme.form.grammar.legend.edit_function                          = Edit grammar
~de.unibamberg.minf.dme.form.grammar.process.compiling                             = Compiling executable bytecode from Java source code
~de.unibamberg.minf.dme.form.grammar.process.java_creation                         = Generating Java parser/lexer source code from grammar rules
~de.unibamberg.minf.dme.form.grammar.process.sandboxing                            = Preparing transformation sandbox for grammar
~de.unibamberg.minf.dme.form.grammar.process.title                                 = Progress
~de.unibamberg.minf.dme.form.grammar.process.uploading                             = Grammar is uploaded to server
~de.unibamberg.minf.dme.form.label.edit                                            = Edit element
~de.unibamberg.minf.dme.form.mapping.create                                        = Create new mapping
~de.unibamberg.minf.dme.form.mapping.edit                                          = Edit mapping
~de.unibamberg.minf.dme.form.nonterminal.edit                                      = Edit element
~de.unibamberg.minf.dme.form.schema.create                                         = Create new datamodel
~de.unibamberg.minf.dme.form.schema.edit                                           = Edit datamodel
~de.unibamberg.minf.dme.form.terminal.edit                                         = Edit terminal element
~de.unibamberg.minf.dme.form.vocabulary.create                                     = Create new vocabulary
~de.unibamberg.minf.dme.form.vocabulary.edit                                       = Edit vocabulary
~de.unibamberg.minf.dme.form.vocabulary_item.create                                = Create new entry
~de.unibamberg.minf.dme.form.vocabulary_item.edit                                  = Edit entry
~de.unibamberg.minf.dme.model.datamodel                                            = Datamodel
~de.unibamberg.minf.dme.model.datamodel.source_model                               = Source model
~de.unibamberg.minf.dme.model.datamodel.target_model                               = Target model
~de.unibamberg.minf.dme.model.element.attribute                                    = Attribute
~de.unibamberg.minf.dme.model.element.element                                      = Element
~de.unibamberg.minf.dme.model.element.name                                         = Name
~de.unibamberg.minf.dme.model.element.namespace                                    = Namespace
~de.unibamberg.minf.dme.model.element.terminal                                     = Terminal
~de.unibamberg.minf.dme.model.element.transient                                    = Transient
~de.unibamberg.minf.dme.model.element.validation.name_blank                        = Element label cannot be empty
~de.unibamberg.minf.dme.model.element.validation.name_pattern                      = Element label may only include alphanumeric characters, - and _
~de.unibamberg.minf.dme.model.element.validation.name_size                         = Element label must contain 3 to 50 characters
~de.unibamberg.minf.dme.model.entity.validation.name                               = Entity label must have a length between 5 and 50 characters
~de.unibamberg.minf.dme.model.function.error_in_grammar                            = Error in grammar
~de.unibamberg.minf.dme.model.function.function                                    = Function
~de.unibamberg.minf.dme.model.function.grammar                                     = Evaluated grammar
~de.unibamberg.minf.dme.model.function.language_version                            = Language version
~de.unibamberg.minf.dme.model.function.name                                        = Label
~de.unibamberg.minf.dme.model.function.state                                       = State
~de.unibamberg.minf.dme.model.function.transformation_function                     = Transformation commands
~de.unibamberg.minf.dme.model.function.validation.labels_not_found                 = Not all produced labels are found in the datamodel definition
~de.unibamberg.minf.dme.model.function.validation.validation_succeeded             = Function successfully validated
~de.unibamberg.minf.dme.model.grammar.base_rule                                    = Base rule
~de.unibamberg.minf.dme.model.grammar.combined                                     = Combined
~de.unibamberg.minf.dme.model.grammar.grammar                                      = Grammar
~de.unibamberg.minf.dme.model.grammar.grammar_layout                               = Grammar layout
~de.unibamberg.minf.dme.model.grammar.lexer_grammar                                = Lexer grammar
~de.unibamberg.minf.dme.model.grammar.name                                         = Label
~de.unibamberg.minf.dme.model.grammar.parser_grammar                               = Parser grammar
~de.unibamberg.minf.dme.model.grammar.passthrough                                  = Passthrough
~de.unibamberg.minf.dme.model.grammar.separate                                     = Separate
~de.unibamberg.minf.dme.model.grammar.state                                        = State
~de.unibamberg.minf.dme.model.grammar.validation.base_rule_not_found               = Specified base method was not found in grammar
~de.unibamberg.minf.dme.model.grammar.validation.lexer_grammar_empty               = Lexer grammar cannot be empty for separate layout grammars
~de.unibamberg.minf.dme.model.grammar.validation.no_grammar_found                  = No grammar available on server, validate first
~de.unibamberg.minf.dme.model.grammar.validation.parser_grammar_empty              = Parser grammar cannot be empty
~de.unibamberg.minf.dme.model.identifiable.validation.id                           = An ID must contain exactly 24 hexadecimal (0-9, A-F) characters
~de.unibamberg.minf.dme.model.mapped_concept.source                                = Source element
~de.unibamberg.minf.dme.model.mapped_concept.targets                               = Target elements
~de.unibamberg.minf.dme.model.mapping.mapping                                      = Mapping
~de.unibamberg.minf.dme.model.mapping.source                                       = Source datamodel
~de.unibamberg.minf.dme.model.mapping.target                                       = Target datamodel
~de.unibamberg.minf.dme.model.mapping.title                                        = Mappings
~de.unibamberg.minf.dme.model.mapping.validation.no_pub_schema_drafts              = Either source, target or both are drafts, so mapping cannot be published either
~de.unibamberg.minf.dme.model.mapping.validation.same_source_and_target            = Source and target datamodel cannot be the same
~de.unibamberg.minf.dme.model.schema.description                                   = Note
~de.unibamberg.minf.dme.model.schema.draft                                         = Draft
~de.unibamberg.minf.dme.model.schema.elements                                      = Elements
~de.unibamberg.minf.dme.model.schema.label                                         = Label
~de.unibamberg.minf.dme.model.schema.root_element                                  = Root element
~de.unibamberg.minf.dme.model.schema.schema                                        = Datamodel
~de.unibamberg.minf.dme.model.schema.source                                        = Source
~de.unibamberg.minf.dme.model.schema.title                                         = Datamodels
~de.unibamberg.minf.dme.model.schema.type                                          = Type
~de.unibamberg.minf.dme.model.schema.validation.id_not_unique                      = This ID is already in use as an ID by another data model or mapping
~de.unibamberg.minf.dme.model.session.label                                        = Label
~de.unibamberg.minf.dme.model.session.persisted_sessions                           = Persisted Sessions
~de.unibamberg.minf.dme.model.session.previous_sessions                            = Previous sessions
~de.unibamberg.minf.dme.model.session.temporary_sessions                           = Temporary sessions
~de.unibamberg.minf.dme.notification.assign_terminal                               = Assign element...
~de.unibamberg.minf.dme.notification.deleted.body                                  = Entry [{0}] has been removed from the database.
~de.unibamberg.minf.dme.notification.deleted.head                                  = Entry deleted!
~de.unibamberg.minf.dme.notification.id_rename_hint                                = The modification of the model ID can result in side-effects in other services and should only be performed after careful consideration.
~de.unibamberg.minf.dme.notification.import.importer                               = Importer
~de.unibamberg.minf.dme.notification.import.keep_ids                               = Use imported IDs
~de.unibamberg.minf.dme.notification.import.keep_ids_hint                          = Imported IDs <strong>should be regenerated (option off)</strong> when importing a datamodel. Only in few circumstances, i.e. when migrating models between instances of the DME, imported IDs might be used to ensure consistency.
~de.unibamberg.minf.dme.notification.import.root_missing                           = Invalid root element
~de.unibamberg.minf.dme.notification.import_error.body                             = On persisting errors please try to reimport the datamodel
~de.unibamberg.minf.dme.notification.import_error.head                             = Import error
~de.unibamberg.minf.dme.notification.import_processing.body                        = After completion the element model will be reloaded
~de.unibamberg.minf.dme.notification.import_processing.head                        = Datamodel being processed
~de.unibamberg.minf.dme.notification.no_terminal_configured                        = This element should be assigned to a terminal element of the datamodel.
~de.unibamberg.minf.dme.notification.publish_error.body                            = Publication error
~de.unibamberg.minf.dme.notification.publish_error.head                            = An error has occurred. The selected entry could not be published.
~de.unibamberg.minf.dme.notification.published.body                                = Entry [{0}] has successfully been published.
~de.unibamberg.minf.dme.notification.published.head                                = Entry published
~de.unibamberg.minf.dme.notification.transformation.available_inputs               = Available inputs
~de.unibamberg.minf.dme.notification.transformation.available_parser_rules         = Parser rules
~de.unibamberg.minf.dme.notification.transformation.available_passthrough_grammars = Passthrough
~de.unibamberg.minf.dme.notification.transformation.no_results                     = Processing of provided input produced no results.
~de.unibamberg.minf.dme.registry.title                                             = Datenmodelle und Mappings
~de.unibamberg.minf.dme.title                                                      = Data Modeling Environment (DME)
~de.unibamberg.minf.dme.title_short                                                = DME
~de.unibamberg.minf.dme.view.home.title                                            = List of datamodels
~de.unibamberg.minf.dme.view.home.title_short                                      = Datamodels
~de.unibamberg.minf.dme.view.mapping_editor                                        = Mapping-Editor
~de.unibamberg.minf.dme.view.schema_editor                                         = Datamodel-Editor
~de.unibamberg.minf.dme.vocabulary.item.model.data                                 = Data
~de.unibamberg.minf.dme.vocabulary.item.model.id                                   = Identifier
~de.unibamberg.minf.dme.vocabulary.item.none_selected                              = Select a vocabulary to see contained items here
~de.unibamberg.minf.dme.vocabulary.item.title                                      = Vocabulary entries
~de.unibamberg.minf.dme.vocabulary.model.description                               = Description
~de.unibamberg.minf.dme.vocabulary.model.label                                     = Label
~de.unibamberg.minf.dme.vocabulary.title                                           = Vocabularies
~de.unibamberg.minf.dme.vocabulary_item.model.data                                 = Data
~de.unibamberg.minf.dme.vocabulary_item.model.label                                = Key
~de.unibamberg.minf.mapping.form.create                                            = Create mapping
~de.unibamberg.minf.mapping.form.edit                                              = Modify mapping
~de.unibamberg.minf.mapreg.button.add                                              = Add mapping
~de.unibamberg.minf.mapreg.model.mapping.description                               = Description
~de.unibamberg.minf.mapreg.model.mapping.elements                                  = Elements
~de.unibamberg.minf.mapreg.model.mapping.label                                     = Label
~de.unibamberg.minf.mapreg.model.mapping.metadata                                  = Mapping
~de.unibamberg.minf.mapreg.model.mapping.schemas                                   = Datamodels
~de.unibamberg.minf.mapreg.title                                                   = Mappings
~de.unibamberg.minf.mapreg.title_short                                             = Mappings
~de.unibamberg.minf.mapreg.view.home.title                                         = List of mappings
~de.unibamberg.minf.mapreg.view.home.title_short                                   = Mappings
~de.unibamberg.minf.myfederation.title                                             = myFederation
